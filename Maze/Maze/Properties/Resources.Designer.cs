//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Maze.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Maze.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap BackgroundGame {
            get {
                object obj = ResourceManager.GetObject("BackgroundGame", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap brick_wall {
            get {
                object obj = ResourceManager.GetObject("brick_wall", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap health {
            get {
                object obj = ResourceManager.GetObject("health", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream intro1 {
            get {
                return ResourceManager.GetStream("intro1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        ///X____XXX_____X___X____X_____X________X
        ///XX_X_X___XXX_XXX_X_XXXX_X_X_X_X_XXX_XX
        ///X__X______X___________X_X_X_X_X_X_X__X
        ///X_XX_XXX__X__X_XXXXXXXX_X_X_________XX
        ///X__X_X_X__X__X_X______X_X_XX_X_X__X__X
        ///X_XX_X_X_XXX_X_X_XXXX_X_X__X_X_XXXX_XX
        ///X__XXX_X___X_X_X_X__X_X_XX_XXX_XX____X
        ///XXXX_X_XXX_X_X_X_XX_X_X__X_X___X_XXXXX
        ///_____________X_X_XX_X_XX_X_X_XXX______
        ///X_XXXXXXX_XX_X_X______XX_XXX_X___XXX_X
        ///X_____X_X_X______XXX___X_X___X_X___X_X
        ///XXX_XXX___X__XX__X___XXX_X_XXXXXXXXX_X
        ///X___X [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Map {
            get {
                return ResourceManager.GetString("Map", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap MinotaurIcon {
            get {
                object obj = ResourceManager.GetObject("MinotaurIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap PlayerIcon {
            get {
                object obj = ResourceManager.GetObject("PlayerIcon", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.IO.UnmanagedMemoryStream similar to System.IO.MemoryStream.
        /// </summary>
        internal static System.IO.UnmanagedMemoryStream win {
            get {
                return ResourceManager.GetStream("win", resourceCulture);
            }
        }
    }
}
